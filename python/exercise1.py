####################################################################################################################
#  __     __   __     ______   ______     ______     ______     ______     ______   ______  
# /\ \   /\ "-.\ \   /\__  _\ /\  ___\   /\  == \   /\  ___\   /\  ___\   /\  == \ /\__  _\ 
# \ \ \  \ \ \-.  \  \/_/\ \/ \ \  __\   \ \  __<   \ \___  \  \ \  __\   \ \  _-/ \/_/\ \/ 
#  \ \_\  \ \_\\"\_\    \ \_\  \ \_____\  \ \_\ \_\  \/\_____\  \ \_____\  \ \_\      \ \_\ 
#   \/_/   \/_/ \/_/     \/_/   \/_____/   \/_/ /_/   \/_____/   \/_____/   \/_/       \/_/ 
#
# Create a python script that, given the following inputs:
#   1. ["11, 9, 38, 16, 75, 2, 8, 23",  "9, 83, 52, 8, 24, 11, 103"]
#   2. ["5, 78, 23, 4, 9, 0, 36, 1", "77, 33, 26, 0, 5, 19, 44"]
#
# Answers:
#   1. [9, 11, 8]
#   2. [5, 0]
#
# The solution must work for any input generated by the following code (the random_input variable):
#     a = [str(random.randint(0,100)) for i in range(0, random.randint(5, 15))]
#     b = [str(random.randint(0,100)) for i in range(0, random.randint(5, 15))]
#     random_input = '['+'"'+', '.join(a)+'"'+', '+'"'+', '.join(b)+'"'+']'
#
####################################################################################################################
import random


def intercept(inp):
    inp = inp.split('\"')
    arr_1 = set([int(x.strip()) for x in inp[1].split(",")])
    arr_2 = set([int(x.strip()) for x in inp[3].split(",")])
    return list(arr_1.intersection(arr_2))


if __name__ == "__main__":
    a = [str(random.randint(0, 100)) for i in range(0, random.randint(5, 15))]
    b = [str(random.randint(0, 100)) for i in range(0, random.randint(5, 15))]
    random_input = '[' + '"' + ', '.join(a) + '"' + ', ' + '"' + ', '.join(b) + '"' + ']'
    arr = intercept(random_input)
    print(a)
    print(b)
    print(arr)
    # print(intercept("[\"11, 9, 38, 16, 75, 2, 8, 23\",  \"9, 83, 52, 8, 24, 11, 103\"]"))
    # print(intercept("[\"5, 78, 23, 4, 9, 0, 36, 1\", \"77, 33, 26, 0, 5, 19, 44\"]"))
